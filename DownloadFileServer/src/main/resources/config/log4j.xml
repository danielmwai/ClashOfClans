<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

    <!-- ========================== 自定义输出格式说明================================ -->
    <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
    <!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数 -->
    <!-- #%c 输出所属的类目，通常就是所在类的全名 -->
    <!-- #%t 输出产生该日志事件的线程名 -->
    <!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->
    <!-- #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 
    22：10：28，921 -->
    <!-- #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10) -->
    <!-- ========================================================================== -->

    <!-- ========================== 输出方式说明================================ -->
    <!-- Log4j提供的appender有以下几种: -->
    <!-- org.apache.log4j.ConsoleAppender(控制台), -->
    <!-- org.apache.log4j.FileAppender(文件), -->
    <!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->
    <!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件), -->
    <!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方) -->
    <!-- ========================================================================== -->
    <!-- 输出到日志文件 -->
    <appender name="filelog_appender" class="org.apache.log4j.RollingFileAppender">
        <!-- 设置File参数：日志输出文件名 -->
        <param name="File" value="./logs/file/WGServerFile.log" />
        <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
        <param name="Append" value="true" />
        <!-- 设置文件大小 -->
        <param name="MaxFileSize" value="5MB" />
        <!-- 设置文件备份 -->
        <param name="MaxBackupIndex" value="10000" />
        <!-- 设置输出文件项目和格式 -->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p (%c:%L)- %m%n" />
        </layout>
    </appender>

    <!-- 输出到日志文件 每天一个日志 -->
    <appender name="filelog_daily" class="org.apache.log4j.DailyRollingFileAppender">
        <param name="File" value="./logs/daily/WGServer.log" />
        <param name="DatePattern" value="'daily.'yyyy-MM-dd'.log'" />
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern"
                   value="%5p %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] (%c:%L) - %m%n"/>
        </layout>
    </appender>

    <!-- 输出到控制台中 -->
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%-5p:[%t](%c:%L) - %m%n"/>
            <!-- "%-5p:[%t](%c:%L) - %m%n" -->
            <!-- "%-5p: [%t] [%c{3}.%M(%L)] | %m%n" -->
            <!-- "%5p %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] (%c:%L) - %m%n" -->
        </layout>
    </appender>

    <!-- 设置包限制输出的通道 -->
    <category name="org.cjj" additivity="false">
        <!-- 日志输出级别，起码可以有5个级别，可以扩展自己的级别，邮件发送必须是ERROR级别不好用，所以最后自己扩展一个邮件发送级别 -->
        <level value="ERROR" />
        <appender-ref ref="filelog_appender" />
        <appender-ref ref="filelog_daily" />
        <appender-ref ref="console" />
    </category>

    <!-- 指定logger的设置，additivity指示是否遵循缺省的继承机制 -->
    <logger name="com.powernpc" additivity="false">
        <level value="debug" />
        <appender-ref ref="filelog_appender" />
        <appender-ref ref="filelog_daily" />
        <appender-ref ref="console" />
    </logger>

    <logger name="org.apache" additivity="false">
        <level value="debug" />
        <appender-ref ref="filelog_appender" />
        <appender-ref ref="filelog_daily" />
        <appender-ref ref="console" />
    </logger>

    <logger name="org.springframework" additivity="false">
        <level value="debug" />
        <appender-ref ref="filelog_appender" />
        <appender-ref ref="filelog_daily" />
        <appender-ref ref="console" />
    </logger>

</log4j:configuration>  